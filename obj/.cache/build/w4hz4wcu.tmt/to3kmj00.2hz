<!DOCTYPE html>
<!--[if IE]><![endif]-->
<html>
  
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <title>MacDown </title>
    <meta name="viewport" content="width=device-width">
    <meta name="title" content="MacDown ">
    <meta name="generator" content="docfx 2.59.1.0">
    
    <link rel="shortcut icon" href="favicon.ico">
    <link rel="stylesheet" href="styles/docfx.vendor.css">
    <link rel="stylesheet" href="styles/docfx.css">
    <link rel="stylesheet" href="styles/main.css">
    <meta property="docfx:navrel" content="toc.html">
    <meta property="docfx:tocrel" content="toc.html">
    
    
    
  </head>
  <body data-spy="scroll" data-target="#affix" data-offset="120">
    <div id="wrapper">
      <header>
        
        <nav id="autocollapse" class="navbar navbar-inverse ng-scope" role="navigation">
          <div class="container">
            <div class="navbar-header">
              <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#navbar">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
              </button>
              
              <a class="navbar-brand" href="index.html">
                <img id="logo" class="svg" src="logo.svg" alt="">
              </a>
            </div>
            <div class="collapse navbar-collapse" id="navbar">
              <form class="navbar-form navbar-right" role="search" id="search">
                <div class="form-group">
                  <input type="text" class="form-control" id="search-query" placeholder="Search" autocomplete="off">
                </div>
              </form>
            </div>
          </div>
        </nav>
        
        <div class="subnav navbar navbar-default">
          <div class="container hide-when-search" id="breadcrumb">
            <ul class="breadcrumb">
              <li></li>
            </ul>
          </div>
        </div>
      </header>
      <div role="main" class="container body-content hide-when-search">
        <div class="article row grid">
          <div class="col-md-10">
            <article class="content wrap" id="_content" data-uid="">
<h1 id="macdown" sourcefile="help_temporary.md" sourcestartlinenumber="1">MacDown</h1>

<p sourcefile="help_temporary.md" sourcestartlinenumber="3"><img src="http://macdown.uranusjr.com/static/images/logo-160.png" sourcefile="help_temporary.md" sourcestartlinenumber="3" alt="MacDown logo"></p>
<p sourcefile="help_temporary.md" sourcestartlinenumber="5">Hello there! I’m <strong sourcefile="help_temporary.md" sourcestartlinenumber="5">MacDown</strong>, the open source Markdown editor for OS X.</p>
<p sourcefile="help_temporary.md" sourcestartlinenumber="7">Let me introduce myself.</p>
<h2 id="markdown-and-i" sourcefile="help_temporary.md" sourcestartlinenumber="11">Markdown and I</h2>
<p sourcefile="help_temporary.md" sourcestartlinenumber="13"><strong sourcefile="help_temporary.md" sourcestartlinenumber="13">Markdown</strong> is a plain text formatting syntax created by John Gruber, aiming to provide a easy-to-read and feasible markup. The original Markdown syntax specification can be found <a href="http://daringfireball.net/projects/markdown/syntax" sourcefile="help_temporary.md" sourcestartlinenumber="13">here</a>.</p>
<p sourcefile="help_temporary.md" sourcestartlinenumber="15"><strong sourcefile="help_temporary.md" sourcestartlinenumber="15">MacDown</strong> is created as a simple-to-use editor for Markdown documents. I render your Markdown contents real-time into HTML, and display them in a preview panel.</p>
<p sourcefile="help_temporary.md" sourcestartlinenumber="17"><img src="http://d.pr/i/10UGP+" sourcefile="help_temporary.md" sourcestartlinenumber="17" alt="MacDown Screenshot"></p>
<p sourcefile="help_temporary.md" sourcestartlinenumber="19">I support all the original Markdown syntaxes. But I can do so much more! Various popular but non-standard syntaxes can be turned on/off from the <a href="#markdown-pane" sourcefile="help_temporary.md" sourcestartlinenumber="19"><strong sourcefile="help_temporary.md" sourcestartlinenumber="19">Markdown</strong> preference pane</a>.</p>
<p sourcefile="help_temporary.md" sourcestartlinenumber="21">You can specify extra HTML rendering options through the <a href="#rendering-pane" sourcefile="help_temporary.md" sourcestartlinenumber="21"><strong sourcefile="help_temporary.md" sourcestartlinenumber="21">Rendering</strong> preference pane</a>.</p>
<p sourcefile="help_temporary.md" sourcestartlinenumber="23">You can customize the editor window to you liking in the <a href="#editor-pane" sourcefile="help_temporary.md" sourcestartlinenumber="23"><strong sourcefile="help_temporary.md" sourcestartlinenumber="23">Editor</strong> preferences pane</a>:</p>
<p sourcefile="help_temporary.md" sourcestartlinenumber="25">You can configure various application (that's me!) behaviors in the <a href="#general-pane" sourcefile="help_temporary.md" sourcestartlinenumber="25"><strong sourcefile="help_temporary.md" sourcestartlinenumber="25">General</strong> preference pane</a>.</p>
<h2 id="the-basics" sourcefile="help_temporary.md" sourcestartlinenumber="27">The Basics</h2>
<p sourcefile="help_temporary.md" sourcestartlinenumber="28">Before I tell you about all the extra syntaxes and capabilities I have, I'll introduce you to the basics of standard markdown. If you already know markdown, and want to jump straight to learning about the fancier things I can do, I suggest you skip to the <a href="#markdown-pane" sourcefile="help_temporary.md" sourcestartlinenumber="28"><strong sourcefile="help_temporary.md" sourcestartlinenumber="28">Markdown</strong> preference pane</a>. Lets jump right in.</p>
<h3 id="line-breaks" sourcefile="help_temporary.md" sourcestartlinenumber="30">Line Breaks</h3>
<p sourcefile="help_temporary.md" sourcestartlinenumber="31">To force a line break, put two spaces and a newline (return) at the end of the line.</p>
<ul sourcefile="help_temporary.md" sourcestartlinenumber="33">
<li sourcefile="help_temporary.md" sourcestartlinenumber="33"><p sourcefile="help_temporary.md" sourcestartlinenumber="33">This two-line bullet
won't break</p>
</li>
<li sourcefile="help_temporary.md" sourcestartlinenumber="36"><p sourcefile="help_temporary.md" sourcestartlinenumber="36">This two-line bullet<br>
will break</p>
</li>
</ul>
<p sourcefile="help_temporary.md" sourcestartlinenumber="39">Here is the code:</p>
<pre><code sourcefile="help_temporary.md" sourcestartlinenumber="41">* This two-line bullet 
won't break

* This two-line bullet  
will break
</code></pre>
<h3 id="strong-and-emphasize" sourcefile="help_temporary.md" sourcestartlinenumber="49">Strong and Emphasize</h3>
<p sourcefile="help_temporary.md" sourcestartlinenumber="51"><strong sourcefile="help_temporary.md" sourcestartlinenumber="51">Strong</strong>: <code sourcefile="help_temporary.md" sourcestartlinenumber="51">**Strong**</code> or <code sourcefile="help_temporary.md" sourcestartlinenumber="51">__Strong__</code> (Command-B)<br>
<em sourcefile="help_temporary.md" sourcestartlinenumber="52">Emphasize</em>: <code sourcefile="help_temporary.md" sourcestartlinenumber="52">*Emphasize*</code> or <code sourcefile="help_temporary.md" sourcestartlinenumber="52">_Emphasize_</code>[^emphasize] (Command-I)</p>
<h3 id="headers-like-this-one" sourcefile="help_temporary.md" sourcestartlinenumber="54">Headers (like this one!)</h3>
<pre><code sourcefile="help_temporary.md" sourcestartlinenumber="56">Header 1
========

Header 2
--------
</code></pre>
<p sourcefile="help_temporary.md" sourcestartlinenumber="62">or</p>
<pre><code sourcefile="help_temporary.md" sourcestartlinenumber="64"># Header 1
## Header 2
### Header 3
#### Header 4
##### Header 5
###### Header 6
</code></pre>
<h3 id="links-and-email" sourcefile="help_temporary.md" sourcestartlinenumber="73">Links and Email</h3>
<h4 id="inline" sourcefile="help_temporary.md" sourcestartlinenumber="74">Inline</h4>
<p sourcefile="help_temporary.md" sourcestartlinenumber="75">Just put angle brackets around an email and it becomes clickable: <a href="mailto:uranusjr@gmail.com" sourcefile="help_temporary.md" sourcestartlinenumber="75">uranusjr@gmail.com</a><br>
<code sourcefile="help_temporary.md" sourcestartlinenumber="76">&lt;uranusjr@gmail.com&gt;</code></p>
<p sourcefile="help_temporary.md" sourcestartlinenumber="78">Same thing with urls: <a href="http://macdown.uranusjr.com" sourcefile="help_temporary.md" sourcestartlinenumber="78">http://macdown.uranusjr.com</a><br>
<code sourcefile="help_temporary.md" sourcestartlinenumber="79"> &lt;http://macdown.uranusjr.com&gt;</code></p>
<p sourcefile="help_temporary.md" sourcestartlinenumber="81">Perhaps you want to some link text like this: <a href="http://macdown.uranusjr.com" sourcefile="help_temporary.md" sourcestartlinenumber="81" title="Title">Macdown Website</a><br>
<code sourcefile="help_temporary.md" sourcestartlinenumber="82">[Macdown Website](http://macdown.uranusjr.com &quot;Title&quot;)</code> (The title is optional)</p>
<h4 id="reference-style" sourcefile="help_temporary.md" sourcestartlinenumber="85">Reference style</h4>
<p sourcefile="help_temporary.md" sourcestartlinenumber="86">Sometimes it looks too messy to include big long urls inline, or you want to keep all your urls together.</p>
<p sourcefile="help_temporary.md" sourcestartlinenumber="88">Make [a link][arbitrary_id] <code sourcefile="help_temporary.md" sourcestartlinenumber="88">[a link][arbitrary_id]</code> then on it's own line anywhere else in the file:<br>
<code sourcefile="help_temporary.md" sourcestartlinenumber="89">[arbitrary_id]: http://macdown.uranusjr.com &quot;Title&quot;</code></p>
<p sourcefile="help_temporary.md" sourcestartlinenumber="91">If the link text itself would make a good id, you can link [like this][] <code sourcefile="help_temporary.md" sourcestartlinenumber="91">[like this][]</code>, then on it's own line anywhere else in the file:<br>
<code sourcefile="help_temporary.md" sourcestartlinenumber="92">[like this]: http://macdown.uranusjr.com</code></p>
<p sourcefile="help_temporary.md" sourcestartlinenumber="94">[arbitrary_id]: <a href="http://macdown.uranusjr.com" sourcefile="help_temporary.md" sourcestartlinenumber="94">http://macdown.uranusjr.com</a> &quot;Title&quot;
[like this]: <a href="http://macdown.uranusjr.com" sourcefile="help_temporary.md" sourcestartlinenumber="95">http://macdown.uranusjr.com</a></p>
<h3 id="images" sourcefile="help_temporary.md" sourcestartlinenumber="98">Images</h3>
<h4 id="inline-1" sourcefile="help_temporary.md" sourcestartlinenumber="99">Inline</h4>
<p sourcefile="help_temporary.md" sourcestartlinenumber="100"><code sourcefile="help_temporary.md" sourcestartlinenumber="100">![Alt Image Text](path/or/url/to.jpg &quot;Optional Title&quot;)</code></p>
<h4 id="reference-style-1" sourcefile="help_temporary.md" sourcestartlinenumber="101">Reference style</h4>
<p sourcefile="help_temporary.md" sourcestartlinenumber="102"><code sourcefile="help_temporary.md" sourcestartlinenumber="102">![Alt Image Text][image-id]</code><br>
on it's own line elsewhere:<br>
<code sourcefile="help_temporary.md" sourcestartlinenumber="104">[image-id]: path/or/url/to.jpg &quot;Optional Title&quot;</code></p>
<h3 id="lists" sourcefile="help_temporary.md" sourcestartlinenumber="107">Lists</h3>
<ul sourcefile="help_temporary.md" sourcestartlinenumber="109">
<li sourcefile="help_temporary.md" sourcestartlinenumber="109">Lists must be preceded by a blank line (or block element)</li>
<li sourcefile="help_temporary.md" sourcestartlinenumber="110">Unordered lists start each item with a <code sourcefile="help_temporary.md" sourcestartlinenumber="110">*</code></li>
</ul>
<ul sourcefile="help_temporary.md" sourcestartlinenumber="111">
<li sourcefile="help_temporary.md" sourcestartlinenumber="111"><code sourcefile="help_temporary.md" sourcestartlinenumber="111">-</code> works too
<ul sourcefile="help_temporary.md" sourcestartlinenumber="112">
<li sourcefile="help_temporary.md" sourcestartlinenumber="112">Indent a level to make a nested list
<ol sourcefile="help_temporary.md" sourcestartlinenumber="113">
<li sourcefile="help_temporary.md" sourcestartlinenumber="113">Ordered lists are supported.</li>
<li sourcefile="help_temporary.md" sourcestartlinenumber="114">Start each item (number-period-space) like <code sourcefile="help_temporary.md" sourcestartlinenumber="114">1. </code></li>
<li sourcefile="help_temporary.md" sourcestartlinenumber="115">It doesn't matter what number you use, I will render them sequentially</li>
<li sourcefile="help_temporary.md" sourcestartlinenumber="116">So you might want to start each line with <code sourcefile="help_temporary.md" sourcestartlinenumber="116">1.</code> and let me sort it out</li>
</ol>
</li>
</ul>
</li>
</ul>
<p sourcefile="help_temporary.md" sourcestartlinenumber="118">Here is the code:</p>
<pre><code sourcefile="help_temporary.md" sourcestartlinenumber="120">* Lists must be preceded by a blank line (or block element)
* Unordered lists start each item with a `*`
- `-` works too
	* Indent a level to make a nested list
		1. Ordered lists are supported.
		2. Start each item (number-period-space) like `1. `
		42. It doesn't matter what number you use, I will render them sequentially
		1. So you might want to start each line with `1.` and let me sort it out
</code></pre>
<h3 id="block-quote" sourcefile="help_temporary.md" sourcestartlinenumber="133">Block Quote</h3>
<blockquote sourcefile="help_temporary.md" sourcestartlinenumber="135">
<p sourcefile="help_temporary.md" sourcestartlinenumber="135">Angle brackets <code sourcefile="help_temporary.md" sourcestartlinenumber="135">&gt;</code> are used for block quotes.<br>
Technically not every line needs to start with a <code sourcefile="help_temporary.md" sourcestartlinenumber="136">&gt;</code> as long as
there are no empty lines between paragraphs.<br>
Looks kinda ugly though.</p>
<blockquote sourcefile="help_temporary.md" sourcestartlinenumber="139">
<p sourcefile="help_temporary.md" sourcestartlinenumber="139">Block quotes can be nested.</p>
<blockquote sourcefile="help_temporary.md" sourcestartlinenumber="140">
<p sourcefile="help_temporary.md" sourcestartlinenumber="140">Multiple Levels</p>
</blockquote>
</blockquote>
<p sourcefile="help_temporary.md" sourcestartlinenumber="142">Most markdown syntaxes work inside block quotes.</p>
<ul sourcefile="help_temporary.md" sourcestartlinenumber="144">
<li sourcefile="help_temporary.md" sourcestartlinenumber="144">Lists</li>
<li sourcefile="help_temporary.md" sourcestartlinenumber="145">[Links][arbitrary_id]</li>
<li sourcefile="help_temporary.md" sourcestartlinenumber="146">Etc.</li>
</ul>
</blockquote>
<p sourcefile="help_temporary.md" sourcestartlinenumber="148">Here is the code:</p>
<pre><code sourcefile="help_temporary.md" sourcestartlinenumber="150">&gt; Angle brackets `&gt;` are used for block quotes.  
Technically not every line needs to start with a `&gt;` as long as
there are no empty lines between paragraphs.  
&gt; Looks kinda ugly though.
&gt; &gt; Block quotes can be nested.  
&gt; &gt; &gt; Multiple Levels
&gt;
&gt; Most markdown syntaxes work inside block quotes.
&gt;
&gt; * Lists
&gt; * [Links][arbitrary_id]
&gt; * Etc.
</code></pre>
<h3 id="inline-code" sourcefile="help_temporary.md" sourcestartlinenumber="166">Inline Code</h3>
<p sourcefile="help_temporary.md" sourcestartlinenumber="167"><code sourcefile="help_temporary.md" sourcestartlinenumber="167">Inline code</code> is indicated by surrounding it with backticks:<br>
<code sourcefile="help_temporary.md" sourcestartlinenumber="168">`Inline code`</code></p>
<p sourcefile="help_temporary.md" sourcestartlinenumber="170">If your <code sourcefile="help_temporary.md" sourcestartlinenumber="170">code has `backticks` </code> that need to be displayed, you can use double backticks:<br>
<code sourcefile="help_temporary.md" sourcestartlinenumber="171">``Code with `backticks` ``</code>  (mind the spaces preceding the final set of backticks)</p>
<h3 id="block-code" sourcefile="help_temporary.md" sourcestartlinenumber="174">Block Code</h3>
<p sourcefile="help_temporary.md" sourcestartlinenumber="175">If you indent at least four spaces or one tab, I'll display a code block.</p>
<pre><code sourcefile="help_temporary.md" sourcestartlinenumber="177">print('This is a code block')
print('The block must be preceded by a blank line')
print('Then indent at least 4 spaces or 1 tab')
	print('Nesting does nothing. Your code is displayed Literally')
</code></pre>
<p sourcefile="help_temporary.md" sourcestartlinenumber="182">I also know how to do something called <a href="#fenced-code-block" sourcefile="help_temporary.md" sourcestartlinenumber="182">Fenced Code Blocks</a> which I will tell you about later.</p>
<h3 id="horizontal-rules" sourcefile="help_temporary.md" sourcestartlinenumber="184">Horizontal Rules</h3>
<p sourcefile="help_temporary.md" sourcestartlinenumber="185">If you type three asterisks <code sourcefile="help_temporary.md" sourcestartlinenumber="185">***</code> or three dashes <code sourcefile="help_temporary.md" sourcestartlinenumber="185">---</code> on a line, I'll display a horizontal rule:</p>
<hr sourcefile="help_temporary.md" sourcestartlinenumber="187">
<h2 id="markdown-pane" sourcefile="help_temporary.md" sourcestartlinenumber="190">The Markdown Preference Pane</h2>
<p sourcefile="help_temporary.md" sourcestartlinenumber="191">This is where I keep all preferences related to how I parse markdown into html.<br>
<img src="http://d.pr/i/RQEi+" sourcefile="help_temporary.md" sourcestartlinenumber="192" alt="Markdown preferences pane"></p>
<h3 id="document-formatting" sourcefile="help_temporary.md" sourcestartlinenumber="194">Document Formatting</h3>
<p sourcefile="help_temporary.md" sourcestartlinenumber="195">The <em sourcefile="help_temporary.md" sourcestartlinenumber="195"><strong sourcefile="help_temporary.md" sourcestartlinenumber="195">Smartypants</strong></em> extension automatically transforms straight quotes (<code sourcefile="help_temporary.md" sourcestartlinenumber="195">&quot;</code> and <code sourcefile="help_temporary.md" sourcestartlinenumber="195">'</code>) in your text into typographer’s quotes (<code sourcefile="help_temporary.md" sourcestartlinenumber="195">“</code>, <code sourcefile="help_temporary.md" sourcestartlinenumber="195">”</code>, <code sourcefile="help_temporary.md" sourcestartlinenumber="195">‘</code>, and <code sourcefile="help_temporary.md" sourcestartlinenumber="195">’</code>) according to the context. Very useful if you’re a typography freak like I am. Quote and Smartypants are syntactically incompatible. If both are enabled, Quote takes precedence.</p>
<h3 id="block-formatting" sourcefile="help_temporary.md" sourcestartlinenumber="198">Block Formatting</h3>
<h4 id="table" sourcefile="help_temporary.md" sourcestartlinenumber="200">Table</h4>
<p sourcefile="help_temporary.md" sourcestartlinenumber="202">This is a table:</p>
<table sourcefile="help_temporary.md" sourcestartlinenumber="204">
<thead>
<tr sourcefile="help_temporary.md" sourcestartlinenumber="204">
<th sourcefile="help_temporary.md" sourcestartlinenumber="204">First Header</th>
<th sourcefile="help_temporary.md" sourcestartlinenumber="204">Second Header</th>
</tr>
</thead>
<tbody>
<tr sourcefile="help_temporary.md" sourcestartlinenumber="206">
<td sourcefile="help_temporary.md" sourcestartlinenumber="206">Content Cell</td>
<td sourcefile="help_temporary.md" sourcestartlinenumber="206">Content Cell</td>
</tr>
<tr sourcefile="help_temporary.md" sourcestartlinenumber="207">
<td sourcefile="help_temporary.md" sourcestartlinenumber="207">Content Cell</td>
<td sourcefile="help_temporary.md" sourcestartlinenumber="207">Content Cell</td>
</tr>
</tbody>
</table>
<p sourcefile="help_temporary.md" sourcestartlinenumber="209">You can align cell contents with syntax like this:</p>
<table sourcefile="help_temporary.md" sourcestartlinenumber="211">
<thead>
<tr sourcefile="help_temporary.md" sourcestartlinenumber="211">
<th style="text-align: left;" sourcefile="help_temporary.md" sourcestartlinenumber="211">Left Aligned</th>
<th style="text-align: center;" sourcefile="help_temporary.md" sourcestartlinenumber="211">Center Aligned</th>
<th style="text-align: right;" sourcefile="help_temporary.md" sourcestartlinenumber="211">Right Aligned</th>
</tr>
</thead>
<tbody>
<tr sourcefile="help_temporary.md" sourcestartlinenumber="213">
<td style="text-align: left;" sourcefile="help_temporary.md" sourcestartlinenumber="213">col 3 is</td>
<td style="text-align: center;" sourcefile="help_temporary.md" sourcestartlinenumber="213">some wordy text</td>
<td style="text-align: right;" sourcefile="help_temporary.md" sourcestartlinenumber="213">$1600</td>
</tr>
<tr sourcefile="help_temporary.md" sourcestartlinenumber="214">
<td style="text-align: left;" sourcefile="help_temporary.md" sourcestartlinenumber="214">col 2 is</td>
<td style="text-align: center;" sourcefile="help_temporary.md" sourcestartlinenumber="214">centered</td>
<td style="text-align: right;" sourcefile="help_temporary.md" sourcestartlinenumber="214">$12</td>
</tr>
<tr sourcefile="help_temporary.md" sourcestartlinenumber="215">
<td style="text-align: left;" sourcefile="help_temporary.md" sourcestartlinenumber="215">zebra stripes</td>
<td style="text-align: center;" sourcefile="help_temporary.md" sourcestartlinenumber="215">are neat</td>
<td style="text-align: right;" sourcefile="help_temporary.md" sourcestartlinenumber="215">$1</td>
</tr>
</tbody>
</table>
<p sourcefile="help_temporary.md" sourcestartlinenumber="217">The left- and right-most pipes (<code sourcefile="help_temporary.md" sourcestartlinenumber="217">|</code>) are only aesthetic, and can be omitted. The spaces don’t matter, either. Alignment depends solely on <code sourcefile="help_temporary.md" sourcestartlinenumber="217">:</code> marks.</p>
<h4 id="fenced-code-block" sourcefile="help_temporary.md" sourcestartlinenumber="219"><a name="fenced-code-block">Fenced Code Block</a></h4>
<p sourcefile="help_temporary.md" sourcestartlinenumber="221">This is a fenced code block:</p>
<pre><code sourcefile="help_temporary.md" sourcestartlinenumber="223">print('Hello world!')
</code></pre>
<p sourcefile="help_temporary.md" sourcestartlinenumber="227">You can also use waves (<code sourcefile="help_temporary.md" sourcestartlinenumber="227">~</code>) instead of back ticks (<code sourcefile="help_temporary.md" sourcestartlinenumber="227">`</code>):</p>
<pre><code sourcefile="help_temporary.md" sourcestartlinenumber="229">print('Hello world!')
</code></pre>
<p sourcefile="help_temporary.md" sourcestartlinenumber="234">You can add an optional language ID at the end of the first line. The language ID will only be used to highlight the code inside if you tick the <em sourcefile="help_temporary.md" sourcestartlinenumber="234"><strong sourcefile="help_temporary.md" sourcestartlinenumber="234">Enable highlighting in code blocks</strong></em> option. This is what happens if you enable it:</p>
<p sourcefile="help_temporary.md" sourcestartlinenumber="236"><img src="http://d.pr/i/9HM6+" sourcefile="help_temporary.md" sourcestartlinenumber="236" alt="Syntax highlighting example"></p>
<p sourcefile="help_temporary.md" sourcestartlinenumber="238">I support many popular languages as well as some generic syntax descriptions that can be used if your language of choice is not supported. See <a href="http://macdown.uranusjr.com/features/" sourcefile="help_temporary.md" sourcestartlinenumber="238">relevant sections on the official site</a> for a full list of supported syntaxes.</p>
<h3 id="inline-formatting" sourcefile="help_temporary.md" sourcestartlinenumber="241">Inline Formatting</h3>
<p sourcefile="help_temporary.md" sourcestartlinenumber="243">The following is a list of optional inline markups supported:</p>
<table sourcefile="help_temporary.md" sourcestartlinenumber="245">
<thead>
<tr sourcefile="help_temporary.md" sourcestartlinenumber="245">
<th sourcefile="help_temporary.md" sourcestartlinenumber="245">Option name</th>
<th sourcefile="help_temporary.md" sourcestartlinenumber="245">Markup</th>
<th sourcefile="help_temporary.md" sourcestartlinenumber="245">Result if enabled</th>
</tr>
</thead>
<tbody>
<tr sourcefile="help_temporary.md" sourcestartlinenumber="247">
<td sourcefile="help_temporary.md" sourcestartlinenumber="247">Intra-word emphasis</td>
<td sourcefile="help_temporary.md" sourcestartlinenumber="247">So A*maz*ing</td>
<td sourcefile="help_temporary.md" sourcestartlinenumber="247">So A<em>maz</em>ing</td>
</tr>
<tr sourcefile="help_temporary.md" sourcestartlinenumber="248">
<td sourcefile="help_temporary.md" sourcestartlinenumber="248">Strikethrough</td>
<td sourcefile="help_temporary.md" sourcestartlinenumber="248">~~Much wow~~</td>
<td sourcefile="help_temporary.md" sourcestartlinenumber="248"><del>Much wow</del></td>
</tr>
<tr sourcefile="help_temporary.md" sourcestartlinenumber="249">
<td sourcefile="help_temporary.md" sourcestartlinenumber="249">Underline [^under]</td>
<td sourcefile="help_temporary.md" sourcestartlinenumber="249">_So doge_</td>
<td sourcefile="help_temporary.md" sourcestartlinenumber="249"><u>So doge</u></td>
</tr>
<tr sourcefile="help_temporary.md" sourcestartlinenumber="250">
<td sourcefile="help_temporary.md" sourcestartlinenumber="250">Quote [^quote]</td>
<td sourcefile="help_temporary.md" sourcestartlinenumber="250">&quot;Such editor&quot;</td>
<td sourcefile="help_temporary.md" sourcestartlinenumber="250"><q>Such editor</q></td>
</tr>
<tr sourcefile="help_temporary.md" sourcestartlinenumber="251">
<td sourcefile="help_temporary.md" sourcestartlinenumber="251">Highlight</td>
<td sourcefile="help_temporary.md" sourcestartlinenumber="251">==So good==</td>
<td sourcefile="help_temporary.md" sourcestartlinenumber="251"><mark>So good</mark></td>
</tr>
<tr sourcefile="help_temporary.md" sourcestartlinenumber="252">
<td sourcefile="help_temporary.md" sourcestartlinenumber="252">Superscript</td>
<td sourcefile="help_temporary.md" sourcestartlinenumber="252">hoge^(fuga)</td>
<td sourcefile="help_temporary.md" sourcestartlinenumber="252">hoge<sup>fuga</sup></td>
</tr>
<tr sourcefile="help_temporary.md" sourcestartlinenumber="253">
<td sourcefile="help_temporary.md" sourcestartlinenumber="253">Autolink</td>
<td sourcefile="help_temporary.md" sourcestartlinenumber="253"><a href="http://t.co" sourcefile="help_temporary.md" sourcestartlinenumber="253">http://t.co</a></td>
<td sourcefile="help_temporary.md" sourcestartlinenumber="253"><a href="http://t.co" sourcefile="help_temporary.md" sourcestartlinenumber="253">http://t.co</a></td>
</tr>
<tr sourcefile="help_temporary.md" sourcestartlinenumber="254">
<td sourcefile="help_temporary.md" sourcestartlinenumber="254">Footnotes</td>
<td sourcefile="help_temporary.md" sourcestartlinenumber="254">[^4] and [^4]:</td>
<td sourcefile="help_temporary.md" sourcestartlinenumber="254">[^4] and footnote 4</td>
</tr>
</tbody>
</table>
<p sourcefile="help_temporary.md" sourcestartlinenumber="256">[^4]: You don't have to use a number. Arbitrary things like <code sourcefile="help_temporary.md" sourcestartlinenumber="256">[^footy note4]</code> and <code sourcefile="help_temporary.md" sourcestartlinenumber="256">[^footy note4]:</code> will also work. But they will <em sourcefile="help_temporary.md" sourcestartlinenumber="256">render</em> as numbered footnotes. Also, no need to keep your footnotes in order, I will sort out the order for you so they appear in the same order they were referenced in the text body. You can even keep some footnotes near where you referenced them, and collect others at the bottom of the file in the traditional place for footnotes.</p>
<h2 id="rendering-pane" sourcefile="help_temporary.md" sourcestartlinenumber="261">The Rendering Preference Pane</h2>
<p sourcefile="help_temporary.md" sourcestartlinenumber="262">This is where I keep preferences relating to how I render and style the parsed markdown in the preview window.<br>
<img src="http://d.pr/i/rT4d+" sourcefile="help_temporary.md" sourcestartlinenumber="263" alt="Rendering preferences pane"></p>
<h3 id="css" sourcefile="help_temporary.md" sourcestartlinenumber="265">CSS</h3>
<p sourcefile="help_temporary.md" sourcestartlinenumber="266">You can choose different css files for me to use to render your html. You can even customize or add your own custom css files.</p>
<h3 id="syntax-highlighting" sourcefile="help_temporary.md" sourcestartlinenumber="268">Syntax Highlighting</h3>
<p sourcefile="help_temporary.md" sourcestartlinenumber="269">You have already seen how I can syntax highlight your fenced code blocks. See the <a href="#fenced-code-block" sourcefile="help_temporary.md" sourcestartlinenumber="269">Fenced Code Block</a> section if you haven’t! You can also choose different themes for syntax highlighting.</p>
<h3 id="tex-like-math-syntax" sourcefile="help_temporary.md" sourcestartlinenumber="271">TeX-like Math Syntax</h3>
<p sourcefile="help_temporary.md" sourcestartlinenumber="272">I can also render TeX-like math syntaxes, if you allow me to.[^math] I can do inline math like this: \( 1 + 1 \) or this (in MathML): <math><mn>1</mn><mo>+</mo><mn>1</mn></math>, and block math:</p>
<p sourcefile="help_temporary.md" sourcestartlinenumber="274">\[
A^T_S = B
\]</p>
<p sourcefile="help_temporary.md" sourcestartlinenumber="278">or (in MathML)</p>
<math display="block">
    <msubsup><mi>A</mi> <mi>S</mi> <mi>T</mi></msubsup>
    <mo>=</mo>
    <mi>B</mi>
</math>
<h3 id="task-list-syntax" sourcefile="help_temporary.md" sourcestartlinenumber="288">Task List Syntax</h3>
<ol sourcefile="help_temporary.md" sourcestartlinenumber="289">
<li sourcefile="help_temporary.md" sourcestartlinenumber="289">[x] I can render checkbox list syntax
<ul sourcefile="help_temporary.md" sourcestartlinenumber="290">
<li sourcefile="help_temporary.md" sourcestartlinenumber="290">[x] I support nesting</li>
<li sourcefile="help_temporary.md" sourcestartlinenumber="291">[x] I support ordered <em sourcefile="help_temporary.md" sourcestartlinenumber="291">and</em> unordered lists</li>
</ul>
</li>
<li sourcefile="help_temporary.md" sourcestartlinenumber="292">[ ] I don't support clicking checkboxes directly in the html window</li>
</ol>
<h3 id="jekyll-front-matter" sourcefile="help_temporary.md" sourcestartlinenumber="295">Jekyll front-matter</h3>
<p sourcefile="help_temporary.md" sourcestartlinenumber="296">If you like, I can display Jekyll front-matter in a nice table. Just make sure you put the front-matter at the very beginning of the file, and fence it with <code sourcefile="help_temporary.md" sourcestartlinenumber="296">---</code>. For example:</p>
<pre><code sourcefile="help_temporary.md" sourcestartlinenumber="298">---
title: &quot;Macdown is my friend&quot;
date: 2014-06-06 20:00:00
---
</code></pre>
<h3 id="render-newline-literally" sourcefile="help_temporary.md" sourcestartlinenumber="305">Render newline literally</h3>
<p sourcefile="help_temporary.md" sourcestartlinenumber="306">Normally I require you to put two spaces and a newline (aka return) at the end of a line in order to create a line break. If you like, I can render a newline any time you end a line with a newline. However, if you enable this, markdown that looks lovely when I render it might look pretty funky when you let some <em sourcefile="help_temporary.md" sourcestartlinenumber="306">other</em> program render it.</p>
<h2 id="general-pane" sourcefile="help_temporary.md" sourcestartlinenumber="309">The General Preferences Pane</h2>
<p sourcefile="help_temporary.md" sourcestartlinenumber="311">This is where I keep preferences related to application behavior.<br>
<img src="http://d.pr/i/rvwu+" sourcefile="help_temporary.md" sourcestartlinenumber="312" alt="General preferences pane"></p>
<p sourcefile="help_temporary.md" sourcestartlinenumber="314">The General Preferences Pane allows you to tell me how you want me to behave. For example, do you want me to make sure there is a document open when I launch? You can also tell me if I should constantly update the preview window as you type, or wait for you to hit <code sourcefile="help_temporary.md" sourcestartlinenumber="314">command-R</code> instead. Maybe you prefer your editor window on the right? Or to see the word-count as you type. This is also the place to tell me if you are interested in pre-releases of me, or just want to stick to better-tested official releases.</p>
<h2 id="editor-pane" sourcefile="help_temporary.md" sourcestartlinenumber="316">The Editor Preference Pane</h2>
<p sourcefile="help_temporary.md" sourcestartlinenumber="317">This is where I keep preferences related to the behavior and styling of the editing window.<br>
<img src="http://d.pr/i/6OL5+" sourcefile="help_temporary.md" sourcestartlinenumber="318" alt="Editor preferences pane"></p>
<h3 id="styling" sourcefile="help_temporary.md" sourcestartlinenumber="321">Styling</h3>
<p sourcefile="help_temporary.md" sourcestartlinenumber="323">My editor provides syntax highlighting. You can edit the base font and the coloring/sizing theme. I provided some default themes (courtesy of <a href="http://mouapp.com" sourcefile="help_temporary.md" sourcestartlinenumber="323">Mou</a>’s creator, Chen Luo) if you don’t know where to start.</p>
<p sourcefile="help_temporary.md" sourcestartlinenumber="325">You can also edit, or even add new themes if you want to! Just click the <em sourcefile="help_temporary.md" sourcestartlinenumber="325"><strong sourcefile="help_temporary.md" sourcestartlinenumber="325">Reveal</strong></em> button, and start moving things around. Remember to use the correct file extension (<code sourcefile="help_temporary.md" sourcestartlinenumber="325">.styles</code>), though. I’m picky about that.</p>
<p sourcefile="help_temporary.md" sourcestartlinenumber="327">I offer auto-completion and other functions to ease your editing experience. If you don’t like it, however, you can turn them off.</p>
<h2 id="hack-on" sourcefile="help_temporary.md" sourcestartlinenumber="333">Hack On</h2>
<p sourcefile="help_temporary.md" sourcestartlinenumber="335">That’s about it. Thanks for listening. I’ll be quiet from now on (unless there’s an update about the app—I’ll remind you for that!).</p>
<p sourcefile="help_temporary.md" sourcestartlinenumber="337">Happy writing!</p>
<p sourcefile="help_temporary.md" sourcestartlinenumber="340">[^emphasize]: If <strong sourcefile="help_temporary.md" sourcestartlinenumber="340">Underlines</strong> is turned on, <code sourcefile="help_temporary.md" sourcestartlinenumber="340">_this notation_</code> will render as underlined instead of emphasized</p>
<p sourcefile="help_temporary.md" sourcestartlinenumber="342">[^under]: If <strong sourcefile="help_temporary.md" sourcestartlinenumber="342">Underline</strong> is disabled <code sourcefile="help_temporary.md" sourcestartlinenumber="342">_this_</code> will be rendered as <em sourcefile="help_temporary.md" sourcestartlinenumber="342">emphasized</em> instead of being underlined.</p>
<p sourcefile="help_temporary.md" sourcestartlinenumber="344">[^quote]: <strong sourcefile="help_temporary.md" sourcestartlinenumber="344">Quote</strong> replaces literal <code sourcefile="help_temporary.md" sourcestartlinenumber="344">&quot;</code> characters with html <code sourcefile="help_temporary.md" sourcestartlinenumber="344">&lt;q&gt;</code> tags. <strong sourcefile="help_temporary.md" sourcestartlinenumber="344">Quote</strong> and <strong sourcefile="help_temporary.md" sourcestartlinenumber="344">Smartypants</strong> are syntactically incompatible. If both are enabled, <strong sourcefile="help_temporary.md" sourcestartlinenumber="344">Quote</strong> takes precedence. Note that <strong sourcefile="help_temporary.md" sourcestartlinenumber="344">Quote</strong> is different from <em sourcefile="help_temporary.md" sourcestartlinenumber="344">blockquote</em>, which is part of standard Markdown.</p>
<p sourcefile="help_temporary.md" sourcestartlinenumber="346">[^math]: Internet connection required.</p>
</article>
          </div>
          
          <div class="hidden-sm col-md-2" role="complementary">
            <div class="sideaffix">
              <nav class="bs-docs-sidebar hidden-print hidden-xs hidden-sm affix" id="affix">
                <h5>In This Article</h5>
                <div></div>
              </nav>
            </div>
          </div>
        </div>
      </div>
      
      <footer>
        <div class="grad-bottom"></div>
        <div class="footer">
          <div class="container">
            <span class="pull-right">
              <a href="#top">Back to top</a>
            </span>
            <span>Copyright &copy; <script>document.write(new Date().getFullYear())</script> pinDeliver AB</span>
            
          </div>
        </div>
      </footer>
    </div>
    
    <script type="text/javascript" src="styles/docfx.vendor.js"></script>
    <script type="text/javascript" src="styles/docfx.js"></script>
    <script type="text/javascript" src="styles/main.js"></script>
  </body>
</html>
